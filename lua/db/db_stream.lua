---
--- Generated by LuaDB(https://github.com/limao996/LuaDB)
--- Created by 狸猫呐.
--- DateTime: 2023/6/26 16:26
---

local M = { TYPE_STREAM = {} } local _NAME = 'db-stream' local super local stream = {} local pack, unpack, packsize = string.pack, string.unpack, string.packsize local type, pairs, setmetatable, getmetatable, error, assert = type, pairs, setmetatable, getmetatable, error, assert local table_unpack = table.unpack function M:bind(db) assert(db.ver, _NAME .. '::请使用LuaDB 3.0以上版本！') assert(db.ver >= 30, _NAME .. '::请使用LuaDB 3.0以上版本！') self.bind = nil if not db.super then super = {} for k, v in pairs(db) do super[k] = v end db.super = super end super = db.super for k, v in pairs(self) do db[k] = v self[k] = nil end M = db return db end function M:pack(v) if getmetatable(v) == M.TYPE_STREAM then local tp = 1 local len = 8 + v[1] v = pack(self.F.T, v[1]) return tp, len, v end return super.pack(self, v) end function M:set(k, v) local fw = self.fw super.set(self, k, v) if getmetatable(v) == M.TYPE_STREAM then fw:seek('cur', v[1] - 1) fw:write('\0') end return self end function M:stream(k) local F = self.F local fw = self.fw local po, addr, size = self:check_key(k) if addr == 0 then return end fw:seek('set', addr + 8 + size) local tp = unpack(F.B, fw:read(1)) if tp ~= 1 then return end local n = unpack(F.T, fw:read(8)) local obj = { s = addr + 8 + size + 9, e = addr + 8 + size + 9 + n, p = addr + 8 + size + 9, len = n, fw = fw, __len = stream.size, __index = stream } return setmetatable(obj, obj) end function stream:length() return self.len end function stream:seek(mode, n) local s, e, p = self.s, self.e, self.p if mode == 'set' then n = n or 1 p = s + n - 1 elseif mode == 'cur' then n = n or 0 p = p + n elseif mode == 'end' then n = n or -1 p = e + n + 1 end if p < s or p > e then error('LuaDB::stream::指针越界！') end self.p = p return p - s + 1 end function stream:write(fmt, ...) if ... then fmt = pack(fmt, ...) end self.fw:seek('set', self.p) self.fw:write(fmt) self:seek('cur', #fmt) return self end function stream:read(fmt) local n = fmt local e, p = self.e, self.p if not n then n = e - p elseif type(fmt) == 'string' then n = packsize(n) end if p + n > e then n = e - p end self.fw:seek('set', p) local s = self.fw:read(n) self:seek('cur', n) if type(fmt) == 'string' then s = { unpack(fmt, s) } return table_unpack(s, 1, #s - 1) end return s end function M.TYPE_STREAM:__index(k) assert(k ~= 0, 'LuaDB::空间长度不可为0！') if k > 0 then return pack('c' .. k, '') end return setmetatable({ -k }, self) end setmetatable(M.TYPE_STREAM, M.TYPE_STREAM) return M